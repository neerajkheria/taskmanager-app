version: "3.9"

services: #Containers in context to Docker Compose
  backend:
    build:
      context: ./task-manager-backend
      dockerfile: Dockerfile
    container_name: task-manager-backend
    environment:
      # ==== Mongo ====
      # Use ONE of these:
      # 1) Local container Mongo:
      # MONGO_URI: "mongodb://mongo:27017/taskdb"
      # 2) Atlas:
      MONGO_URI: "${MONGO_URI}"
      # ==== Cognito (for aws-jwt-verify) ====
      COGNITO_USER_POOL_ID: "${COGNITO_USER_POOL_ID}"
      COGNITO_CLIENT_ID: "${COGNITO_CLIENT_ID}"
      NODE_ENV: "production"
      PORT: "5000"
    ports:
      - "5000:5000"
    # depends_on:
    #   - mongo
    networks:
      - app-net

  frontend:
    build:
      context: ./task-manager-frontend
      dockerfile: Dockerfile
    container_name: task-manager-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-net
    # If your React app calls the backend with a baseURL,
    # set it at build time or use a runtime env injection strategy.
    # For axios baseURL pointing to backend container via host:
    # environment:
    #   REACT_APP_API_BASE: "http://localhost:5000/api"

  # Comment this out if using Atlas
  # mongo:
  #   image: mongo:7
  #   container_name: task-manager-mongo
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db
  #   networks:
  #     - app-net

networks:
  app-net:

# volumes:
#   mongo_data:
